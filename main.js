/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var d=Object.defineProperty;var y=Object.getOwnPropertyDescriptor;var C=Object.getOwnPropertyNames;var J=Object.prototype.hasOwnProperty;var U=(g,e)=>{for(var s in e)d(g,s,{get:e[s],enumerable:!0})},E=(g,e,s,r)=>{if(e&&typeof e=="object"||typeof e=="function")for(let o of C(e))!J.call(g,o)&&o!==s&&d(g,o,{get:()=>e[o],enumerable:!(r=y(e,o))||r.enumerable});return g};var N=g=>E(d({},"__esModule",{value:!0}),g);var O={};U(O,{default:()=>m});module.exports=N(O);var v=require("obsidian");var V=require("@codemirror/view"),u=class{update(e){let s=e.changes.toJSON(),r=s.map(o=>o.length===1).some(o=>o);if(e.docChanged&&r){let o=e.startState.doc.toString(),a=e.state.doc.toString(),i=[!1,!1],n=!1;for(let t=2;t<o.length;t++)o[t-1]==="*"&&o[t-2]==="*"&&(n=!n),i.push(n);let c=s[0].length?0:s[0],f=s[0].length?s[0][0]:s[1][0];i=i.slice(0,c).concat(i.slice(c+f));let l="";n=!1;for(let t=0;t<a.length;t++)a[t]!=="*"&&(i[t]!==n&&(l+="**",n=!n),l+=a[t]);n&&(l+="**");let h=e.state.update({changes:{from:0,to:a.length,insert:l},selection:{anchor:c>l.length?l.length:c}});setTimeout(()=>{e.view.dispatch(h)})}}},S=V.ViewPlugin.fromClass(u);var x=require("@codemirror/view"),p=class{update(e){let s=e.changes.toJSON(),r=s.map(o=>o.length===1).some(o=>o);if(e.docChanged&&r){let o=e.startState.doc.toString(),a=e.state.doc.toString(),i=[!1,!1],n=!1;for(let t=2;t<o.length;t++)o[t-1]==="~"&&o[t-2]==="~"&&(n=!n),i.push(n);let c=s[0].length?0:s[0],f=s[0].length?s[0][0]:s[1][0];i=i.slice(0,c).concat(i.slice(c+f));let l="";n=!1;for(let t=0;t<a.length;t++)a[t]!=="~"&&(i[t]!==n&&(l+="~~",n=!n),l+=a[t]);n&&(l+="~~");let h=e.state.update({changes:{from:0,to:a.length,insert:l},selection:{anchor:c>l.length?l.length:c}});setTimeout(()=>{e.view.dispatch(h)})}}},P=x.ViewPlugin.fromClass(p);var T=require("@codemirror/view"),w=class{update(e){let s=e.changes.toJSON(),r=s.map(o=>o.length===1).some(o=>o);if(e.docChanged&&r){let o=e.startState.doc.toString(),a=e.state.doc.toString(),i=[!1,!1],n=!1;for(let t=2;t<o.length;t++)o[t-1]==="="&&o[t-2]==="="&&(n=!n),i.push(n);let c=s[0].length?0:s[0],f=s[0].length?s[0][0]:s[1][0];i=i.slice(0,c).concat(i.slice(c+f));let l="";n=!1;for(let t=0;t<a.length;t++)a[t]!=="="&&(i[t]!==n&&(l+="==",n=!n),l+=a[t]);n&&(l+="==");let h=e.state.update({changes:{from:0,to:a.length,insert:l},selection:{anchor:c>l.length?l.length:c}});setTimeout(()=>{e.view.dispatch(h)})}}},b=T.ViewPlugin.fromClass(w);var m=class extends v.Plugin{onload(){this.registerEditorExtension([P,S,b])}};
